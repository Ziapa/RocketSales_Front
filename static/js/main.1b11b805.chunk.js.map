{"version":3,"sources":["types/typesLeads.ts","components/Cards.tsx","DAL/API.ts","store/actionCreators/leads.ts","App.tsx","store/reducers/leadsReducer.ts","store/reducers/indext.ts","store/index.ts","index.tsx","App.module.css","components/Cards.module.css"],"names":["LeadsActionTypes","Cards","props","createDate","Date","created_at","className","s","cardsContainer","title","name","style","width","tags","map","el","marginLeft","backgroundColor","id","status","color","responsibleUser","getDay","getMonth","getFullYear","price","instance","axios","create","baseURL","headers","leadsAPI","get","fetchLeads","dispatch","a","type","FETCH_USERS","responseLeads","responseStatuses","responseContacts","FETCH_LEADS_SUCCESS","payload","data","_embedded","leads","FETCH_STATUSES_SUCCESS","statuses","FETCH_CONTACTS_SUCCESS","contacts","FETCH_USERS_ERROR","App","useDispatch","useState","value","setValue","useEffect","length","responseSearch","useSelector","state","loading","find","userName","responsible_user_id","app","placeholder","onChange","e","currentTarget","status_id","created_by","leadsInitialState","error","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1b11b805.chunk.js","sourcesContent":["export type DealsStateType = {\r\n    leads: Array<TypesLeads>,\r\n    statuses: Array<StatusesType>,\r\n    contacts: Array<UsersType>,\r\n    loading: boolean,\r\n    error: null | string\r\n}\r\n\r\nexport type TypesLeads = {\r\n    account_id: number\r\n    closed_at: null\r\n    closest_task_at: null\r\n    created_at: number\r\n    created_by: number\r\n    custom_fields_values: null\r\n    group_id: number\r\n    id: number\r\n    is_deleted: boolean\r\n    loss_reason_id: null\r\n    name: string\r\n    pipeline_id: number\r\n    price: number\r\n    responsible_user_id: number\r\n    score: null\r\n    status_id: number\r\n    updated_at: number\r\n    updated_by: number\r\n    _embedded: {\r\n        tags: Array<TagsType>\r\n    }\r\n}\r\n\r\nexport type TagsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type StatusesType = {\r\n    account_id: number\r\n    color: string\r\n    id: number\r\n    is_editable: boolean\r\n    name: string\r\n    pipeline_id: number\r\n    sort: number\r\n    type: number\r\n}\r\n\r\nexport type UsersType = {\r\n    account_id: number\r\n    closest_task_at: null\r\n    created_at: number\r\n    created_by: number\r\n    first_name: string\r\n    group_id: number\r\n    id: number\r\n    is_deleted: boolean\r\n    is_unsorted: boolean\r\n    last_name: string\r\n    name: string\r\n    responsible_user_id: number\r\n    updated_at: number\r\n    updated_by: number\r\n}\r\n\r\nexport enum LeadsActionTypes {\r\n    FETCH_USERS = \"FETCH_USERS\",\r\n    FETCH_LEADS_SUCCESS = \"FETCH_LEADS_SUCCESS\",\r\n    FETCH_STATUSES_SUCCESS = \"FETCH_STATUSES_SUCCESS\",\r\n    FETCH_CONTACTS_SUCCESS = \"FETCH_CONTACTS_SUCCESS\",\r\n    FETCH_USERS_ERROR = \"FETCH_USERS_ERROR\",\r\n}\r\n\r\ntype FetchLeadsAction = {\r\n    type: \"FETCH_USERS\"\r\n}\r\ntype FetchLeadsSuccessAction = {\r\n    type: \"FETCH_LEADS_SUCCESS\"\r\n    payload: any[]\r\n}\r\ntype FetchStatusesSuccessAction = {\r\n    type: \"FETCH_STATUSES_SUCCESS\"\r\n    payload: any[]\r\n}\r\ntype FetchContactsSuccessAction = {\r\n    type: \"FETCH_CONTACTS_SUCCESS\"\r\n    payload: any[]\r\n}\r\ntype FetchLeadsErrorAction = {\r\n    type: \"FETCH_USERS_ERROR\"\r\n    payload: string\r\n}\r\n\r\nexport type  LeadsActionsType =\r\n    FetchLeadsAction\r\n    | FetchLeadsSuccessAction\r\n    | FetchLeadsErrorAction\r\n    | FetchStatusesSuccessAction\r\n    | FetchContactsSuccessAction\r\n\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport s from \"./Cards.module.css\"\r\nimport { TagsType } from \"../types/typesLeads\";\r\n\r\ntype CardType = {\r\n    name: string\r\n    status: { name: string, color: string }\r\n    responsibleUser: string\r\n    created_at: number\r\n    price: number\r\n    tags: Array<TagsType>\r\n}\r\n\r\nexport const Cards = (props: CardType) => {\r\n    \r\n    const createDate = new Date(props.created_at * 1000)\r\n\r\n    return (\r\n\r\n        <div className={s.cardsContainer}>\r\n            <Card\r\n                title={props.name}\r\n                style={{width: 300}}>\r\n                <div  >{props.tags.map(el => <span key={el.id} style={{ marginLeft: \"5px\", backgroundColor: \"gray\"}}>{el.name}</span> )}</div>\r\n                <p style={{ backgroundColor: `${props.status.color}`}}> {` Статус:   ${props.status.name}`} </p>\r\n                <p>{`Ответственны:    ${props.responsibleUser}`}</p>\r\n                <p>{`Дата: ${createDate.getDay()}.${createDate.getMonth()}.${createDate.getFullYear()}`}</p>\r\n                <p>{`${props.price}р`}</p>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://rocketsales.herokuapp.com/\",\r\n    headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': 'true'\r\n    },\r\n\r\n\r\n})\r\n\r\nexport const leadsAPI = {\r\n    getLeads() {\r\n        return instance.get(\"leads\")\r\n    },\r\n\r\n    getLead(id:string) {\r\n        return instance.get(`leads/${id}`)\r\n    },\r\n\r\n    getContacts () {\r\n        return instance.get(\"contacts\")\r\n    },\r\n\r\n    getContact (id: number) {\r\n        return instance.get(`contacts/${id}`)\r\n    },\r\n\r\n    getPipelines () {\r\n        return instance.get(\"pipelines\")\r\n    },\r\n\r\n    getStatuses (id: number) {\r\n        return instance.get(`statuses/${id}`)\r\n    },\r\n\r\n    getStatus (id: number, pipeline_id: number) {\r\n        return instance.get(`pipelines/${pipeline_id}/statuses/${id}`)\r\n    },\r\n}","import {LeadsActionsType, LeadsActionTypes} from \"../../types/typesLeads\";\r\nimport {Dispatch} from \"redux\";\r\nimport {leadsAPI} from \"../../DAL/API\";\r\n\r\n\r\nexport const fetchLeads = () => {\r\n    return async (dispatch: Dispatch<LeadsActionsType>) => {\r\n        try {\r\n            dispatch({type: LeadsActionTypes.FETCH_USERS})\r\n            const responseLeads = await leadsAPI.getLeads()\r\n            const responseStatuses = await leadsAPI.getStatuses(4904053)\r\n            const responseContacts = await leadsAPI.getContacts()\r\n            dispatch({type: LeadsActionTypes.FETCH_LEADS_SUCCESS, payload: responseLeads.data._embedded.leads})\r\n            dispatch({type: LeadsActionTypes.FETCH_STATUSES_SUCCESS, payload: responseStatuses.data._embedded.statuses})\r\n            dispatch({type: LeadsActionTypes.FETCH_CONTACTS_SUCCESS, payload: responseContacts.data._embedded.contacts})\r\n        } catch (e) {\r\n        dispatch({type: LeadsActionTypes.FETCH_USERS_ERROR,payload: \"Произошла ошибка при загрузки данных\"})\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const searchLeads = (id: string) => {\r\n    return async (dispatch: Dispatch<LeadsActionsType>) => {\r\n        try {\r\n            dispatch({type: LeadsActionTypes.FETCH_USERS})\r\n            const responseSearch = await leadsAPI.getLead(id)\r\n            dispatch({type: LeadsActionTypes.FETCH_LEADS_SUCCESS, payload: responseSearch.data._embedded.leads})\r\n            debugger\r\n        } catch (e) {\r\n            dispatch({type: LeadsActionTypes.FETCH_USERS_ERROR,payload: \"Произошла ошибка при поиске данных\"})\r\n        }\r\n    }\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport s from \"./App.module.css\"\nimport './App.css';\nimport {Cards} from './components/Cards';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from './store/reducers/indext';\nimport {fetchLeads, searchLeads} from \"./store/actionCreators/leads\";\nimport {StatusesType, TypesLeads, UsersType} from \"./types/typesLeads\";\n\nfunction App() {\n\n\n    const dispatch = useDispatch()\n\n    const [value, setValue] = useState(\"\")\n\n    useEffect(()=>{\n        if(value.length > 3){\n            dispatch(searchLeads(value))\n        } if  (value.length === 0) {\n            dispatch(fetchLeads())\n        }\n    },[value, dispatch])\n\n    useEffect(() => {\n        dispatch(fetchLeads())\n    }, [dispatch])\n\n    const leads = useSelector<RootState, Array<TypesLeads>>(state => state.leads.leads)\n    const statuses = useSelector<RootState, Array<StatusesType>>(state => state.leads.statuses)\n    const contacts = useSelector<RootState, Array<UsersType>>(state => state.leads.contacts)\n    const loading = useSelector<RootState, boolean>(state => state.leads.loading)\n\n    const status = (id: number): { name: string, color: string } => {\n\n        const status = statuses.find(status => status.id === id)\n\n        if (status)\n            return status\n        return {name: 'string', color: 'string'}\n    }\n    const userName = (id: number): { id: number, name: string } => {\n        const userName = contacts.find(contacts => contacts.responsible_user_id === id)\n        if (userName) {\n            return userName\n        }\n        return {id: 999, name: \"string\"}\n    }\n\n\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value)\n    }\n\n\n\n    return (\n        <div className={s.app}>\n            { value.length < 3 && value.length > 0 ?\n                <span>поиск работает от 3 символов</span>\n                : \"\"\n            }\n            <input value={value} placeholder={\"Поиск\"} onChange={onChangeHandler}/>\n            <div className={s.cardsContainer}>\n\n                {\n                    loading ?\n                    <p> ИДЕТ ЗАГРУЗКА.....</p>  :\n                    leads.map(el =>\n                    <Cards\n                        key={el.id}\n                        tags={el._embedded.tags}\n                        name={el.name}\n                        status={status(el.status_id)}\n                        responsibleUser={userName(el.created_by).name}\n                        created_at={el.created_at}\n                        price={el.price}/>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import {LeadsActionsType, LeadsActionTypes, DealsStateType} from \"../../types/typesLeads\";\r\n\r\nconst leadsInitialState: DealsStateType = {\r\n    leads: [],\r\n    statuses: [],\r\n    contacts: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const leadsReducer = (state = leadsInitialState, action: LeadsActionsType): DealsStateType => {\r\n    switch (action.type) {\r\n        case LeadsActionTypes.FETCH_USERS:\r\n            return {...state, loading: true, error: null}\r\n        case LeadsActionTypes.FETCH_LEADS_SUCCESS:\r\n            return {...state, loading: false, error: null, leads: action.payload}\r\n        case LeadsActionTypes.FETCH_STATUSES_SUCCESS:\r\n            return {...state, error: null, statuses: action.payload}\r\n        case LeadsActionTypes.FETCH_CONTACTS_SUCCESS:\r\n            return {...state, loading: false, contacts: action.payload}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {leadsReducer} from \"./leadsReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    leads: leadsReducer\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import {applyMiddleware, createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers/indext\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n <Provider store={store}>\n    <App />\n </Provider>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1-9F6\",\"cardsContainer\":\"App_cardsContainer__2-d2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"Cards_cardsContainer__3iAqK\",\"code-box-demo\":\"Cards_code-box-demo__6Dp95\",\"ant-card\":\"Cards_ant-card__3g9ew\"};"],"sourceRoot":""}